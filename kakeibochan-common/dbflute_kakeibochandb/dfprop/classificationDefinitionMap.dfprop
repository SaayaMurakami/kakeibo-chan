# /---------------------------------------------------------------------------
# classificationDefinitionMap: (NotRequired - Default map:{})
#
# The definition of classification.
#
# Specification:
# map: {
#     [classification-name] = list:{
#         ; map:{
#             ; topComment=[comment]; codeType=[String(default) or Number or Boolean]
#             ; undefinedHandlingType=[EXCEPTION or LOGGING(default) or ALLOWED]
#             ; isUseDocumentOnly=[true or false(default)]
#             ; isSuppressAutoDeploy=[true or false(default)]
#             ; groupingMap = map:{
#                 ; [group-name] = map:{
#                     ; groupComment=[comment]
#                     ; elementList=list:{[the list of classification element's name]}
#                 }
#             }
#         }
#         # classification elements for implicit classification
#         ; map:{
#             ; code=[code]; name=[name]; alias=[alias]; comment=[comment]
#             ; sisterCode=[code or code-list]; subItemMap=map:{[free-map]}
#         }
#         # settings for table classification
#         ; map:{
#             ; table=[table-name]
#             ; code=[column-name for code]; name=[column-name for name]
#             ; alias=[column-name for alias]; comment=[column-name for comment]}
#             ; where=[condition for select]; orderBy=[column-name for ordering]
#             ; exceptCodeList=[the list of except code]
#         }
#     }
# }
#
# *The line that starts with '#' means comment-out.
#
map:{
    # ====================================================================================
    #                                                                               Common
    #                                                                               ======
    ; Flg = list:{
        ; map:{
            ; topComment=フラグ。共通的なフラグを示す区分値で、基本的にXxxフラグと呼べるものに関連付けられる。; codeType=String
        }
        ; map:{code=Y; name=True ; alias=Yes  ; comment=フラグがTrue(Yes)であることを示す ; sisterCode=true }
        ; map:{code=N; name=False; alias=No   ; comment=フラグがFalse(No)であることを示す ; sisterCode=false}
    }

    # ====================================================================================
    #                                                                                Table
    #                                                                               ======
    ; CategoryType = list:{
        ; map:{
            ; topComment=勘定科目の種別を表す区分値
            ; codeType=String
        }
        ; map:{code=INCOME; name=Income ; alias=収入  ; comment=収入を表す; }
        ; map:{code=SPEND; name=Spend; alias=支出; comment=支出を表す; }
        ; map:{code=MOVE; name=Move; alias=振替; comment=振替を表す;}
    }
}
# ----------------/